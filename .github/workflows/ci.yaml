name: Build and Test Application

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [master]
  push:
    branches: [master]

env:
  JAVA_VERSION: 21
  NODE_VERSION: 23
  PNPM_VERSION: 10.4.0

jobs:
  build-and-test:
    name: Build & Run All Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        id: pnpm-modules-cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install Frontend Dependencies
        if: steps.pnpm-modules-cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile
        working-directory: src/main/frontend

      - name: Lint Frontend
        run: pnpm lint
        working-directory: src/main/frontend

      - name: Lint Backend
        run: mvn checkstyle:check

      - name: Test Frontend
        run: pnpm test
        working-directory: src/main/frontend

      - name: Test & Build Backend and run E2E Tests
        run: mvn clean package "-Dspring.profiles.active=local-seed"

      - name: Upload CI Artifacts on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            target/surefire-reports/
            target/failsafe-reports/
            target/cypress/
          retention-days: 7

  trigger-docker-publish:
    name: Trigger Production Publish
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Trigger Docker Publish workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: docker-publish
