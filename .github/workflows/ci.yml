name: CI - FF Insights

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master]

env:
  JDK_VERSION: 21
  NODE_VERSION: 23

jobs:
  backend-lint:
    name: Backend Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: 'temurin'
      - name: Lint backend
        run: |
          mvn clean checkstyle:check | tee backend-lint.log
        working-directory: InsightsBackend
      - name: Upload Backend Lint Logs
        uses: actions/upload-artifact@v4
        with:
          name: backend-lint-log
          path: InsightsBackend/backend-lint.log

  frontend-lint:
    name: Frontend Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
        working-directory: InsightsFrontend
      - name: Lint frontend
        run: |
          npm run lint | tee frontend-lint.log
        working-directory: InsightsFrontend
      - name: Upload Frontend Lint Logs
        uses: actions/upload-artifact@v4
        with:
          name: frontend-lint-log
          path: InsightsFrontend/frontend-lint.log

  backend-test:
    name: Backend Unit Test
    runs-on: ubuntu-latest
    needs: [backend-lint]
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports: [5432:5432]
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-
      - name: Backend Unit Tests
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: testuser
          SPRING_DATASOURCE_PASSWORD: testpass
        run: |
          mvn test --file pom.xml | tee test.log
        working-directory: InsightsBackend
      - name: Upload Backend Test Logs
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-logs
          path: |
            InsightsBackend/target/surefire-reports/
            InsightsBackend/test.log

  frontend-test:
    name: Frontend Unit Test
    runs-on: ubuntu-latest
    needs: [frontend-lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: InsightsFrontend/node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('InsightsFrontend/package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
        working-directory: InsightsFrontend
      - name: Frontend Unit Tests
        run: |
          npm run test -- --watch=false --browsers=ChromeHeadless | tee test.log
        working-directory: InsightsFrontend
      - name: Upload Frontend Test Logs
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-logs
          path: InsightsFrontend/test.log

  backend-build:
    name: Backend Build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [backend-test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: 'temurin'
      - name: Build backend
        run: |
          mvn package -DskipTests --file pom.xml | tee build.log
        working-directory: InsightsBackend
      - name: Upload Backend Build Logs
        uses: actions/upload-artifact@v4
        with:
          name: backend-build-logs
          path: InsightsBackend/build.log

  frontend-build:
    name: Frontend Build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [frontend-test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
        working-directory: InsightsFrontend
      - name: Build frontend
        run: |
          npm run build | tee build.log
        working-directory: InsightsFrontend
      - name: Upload Frontend Build Logs
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build-logs
          path: InsightsFrontend/build.log

  e2e-test:
    name: End-to-End Testing
    runs-on: ubuntu-latest 
    steps:      
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies (frontend)
        run: npm ci
        working-directory: InsightsFrontend
      - name: Docker Compose Up
        run: docker compose up -d --build
      - name: Wait for services to be ready
        run: sleep 70
      - name: Cypress Run
        run: npm run cypress:run
        working-directory: InsightsFrontend
      - name: Upload Frontend Build Logs
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-logs
          path: InsightsFrontend/e2e.log

  docker-dispatch:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: [backend-lint, frontend-lint, backend-test, frontend-test]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Docker Publish workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: docker-publish
