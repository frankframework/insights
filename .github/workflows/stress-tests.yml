name: Stress Tests

on:
  workflow_dispatch:
  pull_request:

jobs:
  stress-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: insights
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Backend Container
        run: |
          docker run -d \
            --name backend \
            -e SPRING_PROFILES_ACTIVE=local \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/insights \
            -p 8080:8080 \
            ghcr.io/${{ github.repository }}-backend:master

      - name: Run Frontend Container
        run: |
          docker run -d \
            --name frontend \
            -p 80:80 \
            ghcr.io/${{ github.repository }}-frontend:master

      - name: Install test tools
        run: sudo apt-get update && sudo apt-get install -y apache2-utils curl



        

      - name: Wait a moment for containers to initialize
        run: sleep 15

      - name: Check status of all running containers
        run: docker ps -a

      - name: Inspect Backend Logs (CRUCIAAL VOOR DEBUGGING)
        run: docker logs backend

      - name: Wait for Backend to be healthy (met Verbose Output)
        run: |
          echo "Waiting for backend..."
          # We veranderen de curl-check om meer output te geven
          # We proberen het 10 keer (10 * 6s = 60 seconden max) en falen dan de build
          n=0
          until [ "$n" -ge 10 ]; do
            # We gebruiken -v (verbose) om precies te zien wat de response is
            if curl -v --fail http://localhost:8080/actuator/health; then
              echo "Backend is up!"
              exit 0
            fi
            n=$((n+1))
            echo "Attempt $n/10 failed. Waiting 6 seconds..."
            sleep 6
          done
          echo "::error::Backend did not become healthy after 60 seconds."
          # Nogmaals de logs tonen na de mislukte pogingen
          echo "Final backend logs:"
          docker logs backend
          exit 1




      - name: Wait for Backend to be healthy
        run: |
          echo "Waiting for backend..."
          until curl --fail --silent --output /dev/null http://localhost:8080/actuator/health; do
            echo -n '.'
            sleep 5
          done
          echo "Backend is up!"

      - name: Wait for Frontend to be healthy
        run: |
          echo "Waiting for frontend..."
          until curl --fail --silent --output /dev/null http://localhost:80; do
            echo -n '.'
            sleep 5
          done
          echo "Frontend is up!"
          
      - name: Stress test Backend (Apache Bench)
        run: ab -r -n 100 -c 5 http://localhost:8080/api/releases > backend.log || true

      - name: Stress test Frontend (Apache Bench)
        run: ab -r -n 100 -c 5 http://localhost/ > frontend.log || true

      - name: Upload Apache Bench logs
        uses: actions/upload-artifact@v4
        with:
          name: apache-bench-logs
          path: |
            backend.log
            frontend.log
