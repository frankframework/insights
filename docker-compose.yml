services:
  frontend:
    build: ./InsightsFrontend
    restart: always
    networks:
      - FFInsightsNetwork
    depends_on:
      - backend
    ports:
      - "4200:80"
    container_name: frontend

  dataloader:
    image: postgres:17
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - FFInsightsNetwork
    volumes:
      - ./data-e2e.sql:/data-e2e.sql
    entrypoint: >
      sh -c "
        echo 'Backend is healthy, database schema is aangemaakt. Wachten voor de zekerheid...' &&
        until pg_isready -h db -p 5432 -U postgres; do
          sleep 2;
        done &&
        echo 'Database accepteert verbindingen. Data wordt nu geladen...' &&
        psql -h db -U postgres -d insights -v ON_ERROR_STOP=1 -f /data-e2e.sql
      "
    environment:
      PGPASSWORD: postgres

  backend:
    build: ./InsightsBackend
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: local
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/insights
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
    networks:
      - FFInsightsNetwork
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    container_name: backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 30s

  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: insights
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - FFInsightsNetwork
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "postgres", "-d", "insights" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  FFInsightsNetwork:
    driver: bridge

volumes:
  pg-data:
