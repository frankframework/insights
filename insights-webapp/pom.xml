<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.frankframework</groupId>
		<artifactId>insights-parent</artifactId>
		<version>${revision}</version>
	</parent>

	<artifactId>insights-webapp</artifactId>
	<name>insights-webapp</name>
	<description>Insights Web Application for the Frank!Framework</description>

	<properties>
		<surefire.module.args>-Dspring.profiles.active=local-seed</surefire.module.args>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.graphql</groupId>
			<artifactId>spring-graphql</artifactId>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.shedlock</groupId>
			<artifactId>shedlock-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.shedlock</groupId>
			<artifactId>shedlock-provider-jdbc-template</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-hibernate6</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-database-postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.github.wimdeblauwe</groupId>
			<artifactId>testcontainers-cypress</artifactId>
			<version>1.9.1</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>jsr305</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.5.1</version>
				<executions>
					<execution>
						<id>pnpm install</id>
						<goals><goal>exec</goal></goals>
						<phase>generate-resources</phase>
						<configuration>
							<workingDirectory>src/main/frontend</workingDirectory>
							<executable>pnpm</executable>
							<arguments>
								<argument>i</argument>
								<argument>--frozen-lockfile</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>pnpm build</id>
						<goals><goal>exec</goal></goals>
						<phase>generate-resources</phase>
						<configuration>
							<workingDirectory>src/main/frontend</workingDirectory>
							<executable>pnpm</executable>
							<arguments>
								<argument>run</argument>
								<argument>build</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-frontend-to-TestClasses</id>
						<phase>process-test-resources</phase>
						<goals><goal>copy-resources</goal></goals>
						<configuration>
							<outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/frontend</directory>
									<filtering>false</filtering>
									<targetPath>e2e</targetPath>
									<includes>
										<include>tsconfig.json</include>
										<include>cypress/**</include>
									</includes>
									<excludes>
										<exclude>cypress/test-results/**</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docker</id>
			<properties>
				<config.image.repository>ghcr.io/frankframework</config.image.repository>
				<config.image.name>insights-webapp</config.image.name>
				<config.image.tag>${config.image.name}</config.image.tag>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-package</id>
								<phase>package</phase>
								<configuration>
									<target>
										<exec executable="docker" failonerror="true">
											<arg value="build"/>
											<arg value="-f"/>
											<arg value="../docker/insights-webapp/Dockerfile"/>
											<arg value="-t"/>
											<arg value="${config.image.tag}:latest"/>
											<arg value="-t"/>
											<arg value="${config.image.repository}/${config.image.tag}:latest"/>
											<arg value=".."/>
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
